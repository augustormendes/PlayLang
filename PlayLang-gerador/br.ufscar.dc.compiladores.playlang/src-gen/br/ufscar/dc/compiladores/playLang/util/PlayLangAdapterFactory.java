/**
 * generated by Xtext 2.23.0
 */
package br.ufscar.dc.compiladores.playLang.util;

import br.ufscar.dc.compiladores.playLang.*;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see br.ufscar.dc.compiladores.playLang.PlayLangPackage
 * @generated
 */
public class PlayLangAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static PlayLangPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PlayLangAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = PlayLangPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PlayLangSwitch<Adapter> modelSwitch =
    new PlayLangSwitch<Adapter>()
    {
      @Override
      public Adapter caseGame(Game object)
      {
        return createGameAdapter();
      }
      @Override
      public Adapter caseEventoGlobal(EventoGlobal object)
      {
        return createEventoGlobalAdapter();
      }
      @Override
      public Adapter caseDeclaracao(Declaracao object)
      {
        return createDeclaracaoAdapter();
      }
      @Override
      public Adapter caseCena(Cena object)
      {
        return createCenaAdapter();
      }
      @Override
      public Adapter caseImagem(Imagem object)
      {
        return createImagemAdapter();
      }
      @Override
      public Adapter caseTexto(Texto object)
      {
        return createTextoAdapter();
      }
      @Override
      public Adapter caseEscolhas(Escolhas object)
      {
        return createEscolhasAdapter();
      }
      @Override
      public Adapter caseEscolha(Escolha object)
      {
        return createEscolhaAdapter();
      }
      @Override
      public Adapter caseComando(Comando object)
      {
        return createComandoAdapter();
      }
      @Override
      public Adapter caseRandom(Random object)
      {
        return createRandomAdapter();
      }
      @Override
      public Adapter casePlaySound(PlaySound object)
      {
        return createPlaySoundAdapter();
      }
      @Override
      public Adapter caseIf(If object)
      {
        return createIfAdapter();
      }
      @Override
      public Adapter caseAtribuicao(Atribuicao object)
      {
        return createAtribuicaoAdapter();
      }
      @Override
      public Adapter caseExpressao(Expressao object)
      {
        return createExpressaoAdapter();
      }
      @Override
      public Adapter caseTermoLogico(TermoLogico object)
      {
        return createTermoLogicoAdapter();
      }
      @Override
      public Adapter caseFatorLogico(FatorLogico object)
      {
        return createFatorLogicoAdapter();
      }
      @Override
      public Adapter caseParcela_logica(Parcela_logica object)
      {
        return createParcela_logicaAdapter();
      }
      @Override
      public Adapter caseExpressaoRelacional(ExpressaoRelacional object)
      {
        return createExpressaoRelacionalAdapter();
      }
      @Override
      public Adapter caseExpressaoAritmetica(ExpressaoAritmetica object)
      {
        return createExpressaoAritmeticaAdapter();
      }
      @Override
      public Adapter caseTermo(Termo object)
      {
        return createTermoAdapter();
      }
      @Override
      public Adapter caseFator(Fator object)
      {
        return createFatorAdapter();
      }
      @Override
      public Adapter caseParcela(Parcela object)
      {
        return createParcelaAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link br.ufscar.dc.compiladores.playLang.Game <em>Game</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufscar.dc.compiladores.playLang.Game
   * @generated
   */
  public Adapter createGameAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufscar.dc.compiladores.playLang.EventoGlobal <em>Evento Global</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufscar.dc.compiladores.playLang.EventoGlobal
   * @generated
   */
  public Adapter createEventoGlobalAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufscar.dc.compiladores.playLang.Declaracao <em>Declaracao</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufscar.dc.compiladores.playLang.Declaracao
   * @generated
   */
  public Adapter createDeclaracaoAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufscar.dc.compiladores.playLang.Cena <em>Cena</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufscar.dc.compiladores.playLang.Cena
   * @generated
   */
  public Adapter createCenaAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufscar.dc.compiladores.playLang.Imagem <em>Imagem</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufscar.dc.compiladores.playLang.Imagem
   * @generated
   */
  public Adapter createImagemAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufscar.dc.compiladores.playLang.Texto <em>Texto</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufscar.dc.compiladores.playLang.Texto
   * @generated
   */
  public Adapter createTextoAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufscar.dc.compiladores.playLang.Escolhas <em>Escolhas</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufscar.dc.compiladores.playLang.Escolhas
   * @generated
   */
  public Adapter createEscolhasAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufscar.dc.compiladores.playLang.Escolha <em>Escolha</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufscar.dc.compiladores.playLang.Escolha
   * @generated
   */
  public Adapter createEscolhaAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufscar.dc.compiladores.playLang.Comando <em>Comando</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufscar.dc.compiladores.playLang.Comando
   * @generated
   */
  public Adapter createComandoAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufscar.dc.compiladores.playLang.Random <em>Random</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufscar.dc.compiladores.playLang.Random
   * @generated
   */
  public Adapter createRandomAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufscar.dc.compiladores.playLang.PlaySound <em>Play Sound</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufscar.dc.compiladores.playLang.PlaySound
   * @generated
   */
  public Adapter createPlaySoundAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufscar.dc.compiladores.playLang.If <em>If</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufscar.dc.compiladores.playLang.If
   * @generated
   */
  public Adapter createIfAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufscar.dc.compiladores.playLang.Atribuicao <em>Atribuicao</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufscar.dc.compiladores.playLang.Atribuicao
   * @generated
   */
  public Adapter createAtribuicaoAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufscar.dc.compiladores.playLang.Expressao <em>Expressao</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufscar.dc.compiladores.playLang.Expressao
   * @generated
   */
  public Adapter createExpressaoAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufscar.dc.compiladores.playLang.TermoLogico <em>Termo Logico</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufscar.dc.compiladores.playLang.TermoLogico
   * @generated
   */
  public Adapter createTermoLogicoAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufscar.dc.compiladores.playLang.FatorLogico <em>Fator Logico</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufscar.dc.compiladores.playLang.FatorLogico
   * @generated
   */
  public Adapter createFatorLogicoAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufscar.dc.compiladores.playLang.Parcela_logica <em>Parcela logica</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufscar.dc.compiladores.playLang.Parcela_logica
   * @generated
   */
  public Adapter createParcela_logicaAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufscar.dc.compiladores.playLang.ExpressaoRelacional <em>Expressao Relacional</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufscar.dc.compiladores.playLang.ExpressaoRelacional
   * @generated
   */
  public Adapter createExpressaoRelacionalAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufscar.dc.compiladores.playLang.ExpressaoAritmetica <em>Expressao Aritmetica</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufscar.dc.compiladores.playLang.ExpressaoAritmetica
   * @generated
   */
  public Adapter createExpressaoAritmeticaAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufscar.dc.compiladores.playLang.Termo <em>Termo</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufscar.dc.compiladores.playLang.Termo
   * @generated
   */
  public Adapter createTermoAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufscar.dc.compiladores.playLang.Fator <em>Fator</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufscar.dc.compiladores.playLang.Fator
   * @generated
   */
  public Adapter createFatorAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.ufscar.dc.compiladores.playLang.Parcela <em>Parcela</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.ufscar.dc.compiladores.playLang.Parcela
   * @generated
   */
  public Adapter createParcelaAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //PlayLangAdapterFactory
