/**
 * generated by Xtext 2.23.0
 */
package br.ufscar.dc.compiladores.playLang.impl;

import br.ufscar.dc.compiladores.playLang.Cena;
import br.ufscar.dc.compiladores.playLang.Expressao;
import br.ufscar.dc.compiladores.playLang.If;
import br.ufscar.dc.compiladores.playLang.PlayLangPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>If</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.ufscar.dc.compiladores.playLang.impl.IfImpl#getExpressaoIf <em>Expressao If</em>}</li>
 *   <li>{@link br.ufscar.dc.compiladores.playLang.impl.IfImpl#getIdIf <em>Id If</em>}</li>
 *   <li>{@link br.ufscar.dc.compiladores.playLang.impl.IfImpl#getElif <em>Elif</em>}</li>
 *   <li>{@link br.ufscar.dc.compiladores.playLang.impl.IfImpl#getIdElse <em>Id Else</em>}</li>
 * </ul>
 *
 * @generated
 */
public class IfImpl extends MinimalEObjectImpl.Container implements If
{
  /**
   * The cached value of the '{@link #getExpressaoIf() <em>Expressao If</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpressaoIf()
   * @generated
   * @ordered
   */
  protected Expressao expressaoIf;

  /**
   * The cached value of the '{@link #getIdIf() <em>Id If</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdIf()
   * @generated
   * @ordered
   */
  protected Cena idIf;

  /**
   * The cached value of the '{@link #getElif() <em>Elif</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElif()
   * @generated
   * @ordered
   */
  protected If elif;

  /**
   * The cached value of the '{@link #getIdElse() <em>Id Else</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdElse()
   * @generated
   * @ordered
   */
  protected Cena idElse;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IfImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PlayLangPackage.Literals.IF;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expressao getExpressaoIf()
  {
    return expressaoIf;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpressaoIf(Expressao newExpressaoIf, NotificationChain msgs)
  {
    Expressao oldExpressaoIf = expressaoIf;
    expressaoIf = newExpressaoIf;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PlayLangPackage.IF__EXPRESSAO_IF, oldExpressaoIf, newExpressaoIf);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExpressaoIf(Expressao newExpressaoIf)
  {
    if (newExpressaoIf != expressaoIf)
    {
      NotificationChain msgs = null;
      if (expressaoIf != null)
        msgs = ((InternalEObject)expressaoIf).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PlayLangPackage.IF__EXPRESSAO_IF, null, msgs);
      if (newExpressaoIf != null)
        msgs = ((InternalEObject)newExpressaoIf).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PlayLangPackage.IF__EXPRESSAO_IF, null, msgs);
      msgs = basicSetExpressaoIf(newExpressaoIf, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PlayLangPackage.IF__EXPRESSAO_IF, newExpressaoIf, newExpressaoIf));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Cena getIdIf()
  {
    if (idIf != null && idIf.eIsProxy())
    {
      InternalEObject oldIdIf = (InternalEObject)idIf;
      idIf = (Cena)eResolveProxy(oldIdIf);
      if (idIf != oldIdIf)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, PlayLangPackage.IF__ID_IF, oldIdIf, idIf));
      }
    }
    return idIf;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Cena basicGetIdIf()
  {
    return idIf;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIdIf(Cena newIdIf)
  {
    Cena oldIdIf = idIf;
    idIf = newIdIf;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PlayLangPackage.IF__ID_IF, oldIdIf, idIf));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public If getElif()
  {
    return elif;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetElif(If newElif, NotificationChain msgs)
  {
    If oldElif = elif;
    elif = newElif;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PlayLangPackage.IF__ELIF, oldElif, newElif);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setElif(If newElif)
  {
    if (newElif != elif)
    {
      NotificationChain msgs = null;
      if (elif != null)
        msgs = ((InternalEObject)elif).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PlayLangPackage.IF__ELIF, null, msgs);
      if (newElif != null)
        msgs = ((InternalEObject)newElif).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PlayLangPackage.IF__ELIF, null, msgs);
      msgs = basicSetElif(newElif, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PlayLangPackage.IF__ELIF, newElif, newElif));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Cena getIdElse()
  {
    if (idElse != null && idElse.eIsProxy())
    {
      InternalEObject oldIdElse = (InternalEObject)idElse;
      idElse = (Cena)eResolveProxy(oldIdElse);
      if (idElse != oldIdElse)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, PlayLangPackage.IF__ID_ELSE, oldIdElse, idElse));
      }
    }
    return idElse;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Cena basicGetIdElse()
  {
    return idElse;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIdElse(Cena newIdElse)
  {
    Cena oldIdElse = idElse;
    idElse = newIdElse;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PlayLangPackage.IF__ID_ELSE, oldIdElse, idElse));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PlayLangPackage.IF__EXPRESSAO_IF:
        return basicSetExpressaoIf(null, msgs);
      case PlayLangPackage.IF__ELIF:
        return basicSetElif(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PlayLangPackage.IF__EXPRESSAO_IF:
        return getExpressaoIf();
      case PlayLangPackage.IF__ID_IF:
        if (resolve) return getIdIf();
        return basicGetIdIf();
      case PlayLangPackage.IF__ELIF:
        return getElif();
      case PlayLangPackage.IF__ID_ELSE:
        if (resolve) return getIdElse();
        return basicGetIdElse();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PlayLangPackage.IF__EXPRESSAO_IF:
        setExpressaoIf((Expressao)newValue);
        return;
      case PlayLangPackage.IF__ID_IF:
        setIdIf((Cena)newValue);
        return;
      case PlayLangPackage.IF__ELIF:
        setElif((If)newValue);
        return;
      case PlayLangPackage.IF__ID_ELSE:
        setIdElse((Cena)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PlayLangPackage.IF__EXPRESSAO_IF:
        setExpressaoIf((Expressao)null);
        return;
      case PlayLangPackage.IF__ID_IF:
        setIdIf((Cena)null);
        return;
      case PlayLangPackage.IF__ELIF:
        setElif((If)null);
        return;
      case PlayLangPackage.IF__ID_ELSE:
        setIdElse((Cena)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PlayLangPackage.IF__EXPRESSAO_IF:
        return expressaoIf != null;
      case PlayLangPackage.IF__ID_IF:
        return idIf != null;
      case PlayLangPackage.IF__ELIF:
        return elif != null;
      case PlayLangPackage.IF__ID_ELSE:
        return idElse != null;
    }
    return super.eIsSet(featureID);
  }

} //IfImpl
