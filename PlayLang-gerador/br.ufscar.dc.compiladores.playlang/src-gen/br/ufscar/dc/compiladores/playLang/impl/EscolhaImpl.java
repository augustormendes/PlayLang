/**
 * generated by Xtext 2.23.0
 */
package br.ufscar.dc.compiladores.playLang.impl;

import br.ufscar.dc.compiladores.playLang.Cena;
import br.ufscar.dc.compiladores.playLang.Comando;
import br.ufscar.dc.compiladores.playLang.Escolha;
import br.ufscar.dc.compiladores.playLang.If;
import br.ufscar.dc.compiladores.playLang.PlayLangPackage;
import br.ufscar.dc.compiladores.playLang.Texto;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Escolha</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.ufscar.dc.compiladores.playLang.impl.EscolhaImpl#getTextos <em>Textos</em>}</li>
 *   <li>{@link br.ufscar.dc.compiladores.playLang.impl.EscolhaImpl#getComando <em>Comando</em>}</li>
 *   <li>{@link br.ufscar.dc.compiladores.playLang.impl.EscolhaImpl#getIf <em>If</em>}</li>
 *   <li>{@link br.ufscar.dc.compiladores.playLang.impl.EscolhaImpl#getId <em>Id</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EscolhaImpl extends MinimalEObjectImpl.Container implements Escolha
{
  /**
   * The cached value of the '{@link #getTextos() <em>Textos</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTextos()
   * @generated
   * @ordered
   */
  protected EList<Texto> textos;

  /**
   * The cached value of the '{@link #getComando() <em>Comando</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComando()
   * @generated
   * @ordered
   */
  protected EList<Comando> comando;

  /**
   * The cached value of the '{@link #getIf() <em>If</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIf()
   * @generated
   * @ordered
   */
  protected If if_;

  /**
   * The cached value of the '{@link #getId() <em>Id</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected Cena id;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EscolhaImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PlayLangPackage.Literals.ESCOLHA;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Texto> getTextos()
  {
    if (textos == null)
    {
      textos = new EObjectContainmentEList<Texto>(Texto.class, this, PlayLangPackage.ESCOLHA__TEXTOS);
    }
    return textos;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Comando> getComando()
  {
    if (comando == null)
    {
      comando = new EObjectContainmentEList<Comando>(Comando.class, this, PlayLangPackage.ESCOLHA__COMANDO);
    }
    return comando;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public If getIf()
  {
    return if_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIf(If newIf, NotificationChain msgs)
  {
    If oldIf = if_;
    if_ = newIf;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PlayLangPackage.ESCOLHA__IF, oldIf, newIf);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIf(If newIf)
  {
    if (newIf != if_)
    {
      NotificationChain msgs = null;
      if (if_ != null)
        msgs = ((InternalEObject)if_).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PlayLangPackage.ESCOLHA__IF, null, msgs);
      if (newIf != null)
        msgs = ((InternalEObject)newIf).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PlayLangPackage.ESCOLHA__IF, null, msgs);
      msgs = basicSetIf(newIf, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PlayLangPackage.ESCOLHA__IF, newIf, newIf));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Cena getId()
  {
    if (id != null && id.eIsProxy())
    {
      InternalEObject oldId = (InternalEObject)id;
      id = (Cena)eResolveProxy(oldId);
      if (id != oldId)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, PlayLangPackage.ESCOLHA__ID, oldId, id));
      }
    }
    return id;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Cena basicGetId()
  {
    return id;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setId(Cena newId)
  {
    Cena oldId = id;
    id = newId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PlayLangPackage.ESCOLHA__ID, oldId, id));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PlayLangPackage.ESCOLHA__TEXTOS:
        return ((InternalEList<?>)getTextos()).basicRemove(otherEnd, msgs);
      case PlayLangPackage.ESCOLHA__COMANDO:
        return ((InternalEList<?>)getComando()).basicRemove(otherEnd, msgs);
      case PlayLangPackage.ESCOLHA__IF:
        return basicSetIf(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PlayLangPackage.ESCOLHA__TEXTOS:
        return getTextos();
      case PlayLangPackage.ESCOLHA__COMANDO:
        return getComando();
      case PlayLangPackage.ESCOLHA__IF:
        return getIf();
      case PlayLangPackage.ESCOLHA__ID:
        if (resolve) return getId();
        return basicGetId();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PlayLangPackage.ESCOLHA__TEXTOS:
        getTextos().clear();
        getTextos().addAll((Collection<? extends Texto>)newValue);
        return;
      case PlayLangPackage.ESCOLHA__COMANDO:
        getComando().clear();
        getComando().addAll((Collection<? extends Comando>)newValue);
        return;
      case PlayLangPackage.ESCOLHA__IF:
        setIf((If)newValue);
        return;
      case PlayLangPackage.ESCOLHA__ID:
        setId((Cena)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PlayLangPackage.ESCOLHA__TEXTOS:
        getTextos().clear();
        return;
      case PlayLangPackage.ESCOLHA__COMANDO:
        getComando().clear();
        return;
      case PlayLangPackage.ESCOLHA__IF:
        setIf((If)null);
        return;
      case PlayLangPackage.ESCOLHA__ID:
        setId((Cena)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PlayLangPackage.ESCOLHA__TEXTOS:
        return textos != null && !textos.isEmpty();
      case PlayLangPackage.ESCOLHA__COMANDO:
        return comando != null && !comando.isEmpty();
      case PlayLangPackage.ESCOLHA__IF:
        return if_ != null;
      case PlayLangPackage.ESCOLHA__ID:
        return id != null;
    }
    return super.eIsSet(featureID);
  }

} //EscolhaImpl
